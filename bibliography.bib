% Encoding: UTF-8

%%%
%
%Beim Erstellen der Bibtex-Datei wird empfohlen darauf zu achten, dass die DOI aufgeführt wird.
%
%%%

@inproceedings{Fritzsch_2019,
  doi = {10.1109/icsme.2019.00081},
  url = {https://doi.org/10.1109%2Ficsme.2019.00081},
  year = 2019,
  month = {sep},
  publisher = {{IEEE}},
  author = {Jonas Fritzsch and Justus Bogner and Stefan Wagner and Alfred Zimmermann},
  title = {Microservices Migration in Industry: Intentions, Strategies, and Challenges},
  booktitle = {2019 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})}
}

@InProceedings{10.1007/978-3-030-06019-0_10,
	author="Fritzsch, Jonas
	and Bogner, Justus
	and Zimmermann, Alfred
	and Wagner, Stefan",
	editor="Bruel, Jean-Michel
	and Mazzara, Manuel
	and Meyer, Bertrand",
	title="From Monolith to Microservices: A Classification of Refactoring Approaches",
	booktitle="Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment",
	year="2019",
	publisher="Springer International Publishing",
	address="Cham",
	pages="128--141",
	abstract="While the recently emerged Microservices architectural style is widely discussed in literature, it is difficult to find clear guidance on the process of refactoring legacy applications. The importance of the topic is underpinned by high costs and effort of a refactoring process which has several other implications, e.g. overall processes (DevOps) and team structure. Software architects facing this challenge are in need of selecting an appropriate strategy and refactoring technique. One of the most discussed aspects in this context is finding the right service granularity to fully leverage the advantages of a Microservices architecture. This study first discusses the notion of architectural refactoring and subsequently compares 10 existing refactoring approaches recently proposed in academic literature. The approaches are classified by the underlying decomposition technique and visually presented in the form of a decision guide for quick reference. The review yielded a variety of strategies to break down a monolithic application into independent services. With one exception, most approaches are only applicable under certain conditions. Further concerns are the significant amount of input data some approaches require as well as limited or prototypical tool support.",
	isbn="978-3-030-06019-0"
}


@misc{fritzsch2022architecturecentric,
  title={Towards an Architecture-centric Methodology for Migrating to Microservices},
  author={Jonas Fritzsch and Justus Bogner and Markus Haug and Stefan Wagner and Alfred Zimmermann},
  year={2022},
  eprint={2207.00507},
  archivePrefix={arXiv},
  primaryClass={cs.SE}
}

@article{https://doi.org/10.1002/spe.2974,
	author = {Soldani, Jacopo and Muntoni, Giuseppe and Neri, Davide and Brogi, Antonio},
	title = {The μTOSCA toolchain: Mining, analyzing, and refactoring microservice-based architectures},
	journal = {Software: Practice and Experience},
	volume = {51},
	number = {7},
	pages = {1591-1621},
	keywords = {architectural smells, microservices, refactoring, software architecture mining},
	doi = {https://doi.org/10.1002/spe.2974},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2974},
	eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2974},
	abstract = {Summary Exploiting microservices to architect enterprise applications is becoming commonplace. This makes it crucial to provide some support for designing and analyzing microservice-based applications, for example, for understanding whether a microservice-based application adheres to the main design principles of microservices and for choosing how to refactor it when this is not the case. To provide such support, in this article we present the TOSCA toolchain. More precisely, we first introduce the TOSCA model to represent the architecture of microservice-based applications with the OASIS standard TOSCA. We then describe a technique to automatically mine the architecture of a microservice-based application and represent it with TOSCA, given the Kubernetes deployment of the application. We also present a methodology to analyze the TOSCA representation of a microservice-based architecture to systematically identify the architectural smells potentially affecting the corresponding application and to resolve them. Finally, we present two prototype tools, Miner and Freshener, implementing our mining solution and the support for identifying and resolving architectural smells in microservice-based applications, respectively. We then assess —by discussing some case studies— how effectively Miner, Freshener, and the TOSCA toolchain can support researchers and practitioners working with microservices.},
	year = {2021}
}

@inproceedings{10.1145/3242163.3242164,
	author = {Carrasco, Andr\'{e}s and Bladel, Brent van and Demeyer, Serge},
	title = {Migrating towards Microservices: Migration and Architecture Smells},
	year = {2018},
	isbn = {9781450359740},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3242163.3242164},
	doi = {10.1145/3242163.3242164},
	abstract = {Migrating to microservices is an error-prone process with deep pitfalls resulting in high costs for mistakes. Microservices is a relatively new architectural style, resulting in the lack of general guidelines for migrating monoliths towards microservices. We present 9 common pitfalls in terms of bad smells with their potential solutions. Using these bad smells, pitfalls can be identified and corrected in the migration process.},
	booktitle = {Proceedings of the 2nd International Workshop on Refactoring},
	pages = {1–6},
	numpages = {6},
	keywords = {MicroServices, Architecture Smells, Migration Smells, Literature Study},
	location = {Montpellier, France},
	series = {IWoR 2018}
}

@MastersThesis{master-daniel-koch,
  author      = {Daniel Koch},
  date        = {2022},
  institution = {Institute of Software Engineering, University of Stuttgart},
  title       = {Migrating Monolithic Architecturesto Microservices: A Study onSoftware Quality Attributes},
  doi         = {10.18419/opus-12676},
  url         = {http://elib.uni-stuttgart.de/handle/11682/12695},
}


% TODO remove duplicate
@Misc{master-daniel-koch2,
  author      = {Daniel Koch},
  year        = {2022},
  institution = {Institute of Software Engineering, University of Stuttgart},
  title       = {Migrating Monolithic Architecturesto Microservices: A Study onSoftware Quality Attributes},
  doi         = {10.18419/opus-12676},
  url         = {http://elib.uni-stuttgart.de/handle/11682/12695},
}

@MastersThesis{master-tobias-haller,
  author      = {Tobias Haller},
  date        = {2022},
  institution = {Institute of Software Engineering, University of Stuttgart},
  title       = {Design, Implementation and Evaluation of an Application for Guiding Architectural Refactoring to Microservices},
  doi         = {10.18419/opus-12272},
  url         = {http://elib.uni-stuttgart.de/handle/11682/12289},
}

@Misc{arh-github,
  author = {Jonas Fritzsch and Tobias Haller and Daniel Koch},
  date   = {2022},
  title  = {GitHub repository of the Architecture Refactoring Helper},
  url    = {https://github.com/jfr609/architecture-refactoring-helper},
}

@Comment{jabref-meta: databaseType:biblatex;}
